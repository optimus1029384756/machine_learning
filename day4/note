regressor = LinearRegression()
로 선형회귀 모델 인스턴스를 호출 한 다음에
regressor.fit(x_train, y_train)
을 이용하여 선형 회귀 모델을 학습한다.

그 다음 
y_pred = regressor.predict(x_test)
테스트 데이터을 모델에 집어넣어 예측 값을 산출하고

plt.scatter(x_train, y_train, color = 'red')
#그래프 점 표시
plt.plot(x_train,  regressor.predict(x_train), color = 'blue')
#그레프 직선 표시
plt. title('Salary vs Experience (Training set)')
#그래프 이름
plt.xlabel('Years of Experience')
#그래프의 x축 이름
plt.ylabel('Salary')
#그래프의 y축 이름
plt.show()
#그래프 그리기
로 데이터를 시각화 한다.

plt.scatter(x_test, y_test, color = 'red')
plt.plot(x_test,  y_pred, color = 'blue')
plt. title('Salary vs Experience (Test set)')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.show()

여기에서 
굳이 테스트 데이터를 이용해 그래프를 그린다고 해서 
plt.plot(x_test,  y_pred, color = 'blue')가 아니라
plt.plot(x_train,  regressor.predict(x_train), color = 'blue')
로 코드를 짜도 되는데

그 이유는 선형 예측을 할 때는 특수한 방정식 하나로 예측을 다 하기 때문에 선형 예측을 통한 직선을 그릴 때는 어떤 데이터를 쓰더라도 같은 직선이 나온다.
